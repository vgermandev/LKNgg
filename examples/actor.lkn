Thing is a  Class.
Thing has:mass.
Thing implements: description:[^(`Thing with mass=`+(mass asString))].
	
`let ts be a Thing with mass = 20` println.	
ts refers to a new Thing with mass:20.
(`ts mass = ` + (ts mass asString)) println.

`let change ts mass to 30` println.
ts mass:30.
(`mass set to ` + (ts mass asString)) println.
desc:= ts description.
(`ts description is: ` + ts description) println.

`sending "mass:200" to ts` println.
ts send `mass:200`.
`sending message to retrive mass` println.
mass200asyncResult := ts send `mass`.
`wait and retrieve mass when ready` println.
mass200:= mass200asyncResult value.
(`result ready and new mass is: ` + (mass200 asString) ) println.
(`the new description is: ` + ts description ) println.

`setting mass to 300 asynchronicaly` println.
ts send `mass:300`.

`retrieve new mass asynchronicaly` println.
asyncres := ts send `mass`.
mass300:= asyncres value.
(`the new mass value is ` + (mass300 asString)) println.
description300result:= ts send `description`.
(`The new description is `+ (description300result value) ) println.
